#!/usr/bin/env sh
. "$(dirname -- "$0")/husky.sh"

# Função para exibir mensagens de erro
error_exit() {
    echo "Erro: $1"
    exit 1
}

# Executar os testes PHP em paralelo
php artisan test --parallel | php

if [ $? -ne 0 ]; then
    error_exit "Testes falharam. Verifique os resultados abaixo:"
    cat output/test_results.txt
fi

# Verificar se todos os testes passaram
test_passed=true
while IFS= read -r line; do
    if [[ $line == *"FAILED"* ]]; then
        test_passed=false
        break
    fi
done < output/test_results.txt

if [ "$test_passed" = false ]; then
    error_exit "Alguns testes falharam. Verifique os resultados abaixo:"
    cat output/test_results.txt
fi

# Formatar cada arquivo alterado usando o Laravel Pint
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep "\.php\$")
for FILE in $STAGED_FILES
do
    ./vendor/bin/pint "${FILE}" > output/formatted_${FILE}
    if [ $? -ne 0 ]; then
        error_exit "Erro ao formatar ${FILE}. Verifique manualmente."
    else
        mv output/formatted_${FILE} "${FILE}"
        git add "${FILE}"
    fi
done;

echo "Todos os testes passaram e os arquivos foram formatados com sucesso!"
